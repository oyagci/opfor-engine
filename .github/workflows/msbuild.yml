name: MSBuild

on:
  pull_request:
    branches:
      - dev
      - master
      - main

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./opfor.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Setup premake
      uses: abel0b/setup-premake@v1

    - name: Setup Build
      run: premake5 vs2019

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Test
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: .\bin\${{env.BUILD_CONFIGURATION}}-windows-x86_64\opfor-tests\opfor-tests.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libgtk-3-dev clang

    - name: Setup premake
      uses: abel0b/setup-premake@v1

    - name: Setup Build
      run: premake5 --cc=clang gmake

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: config=release make -j$(nproc)
